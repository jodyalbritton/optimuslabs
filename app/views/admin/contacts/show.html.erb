<script>
  var init = [];
  init.push(function () {
    $('body').addClass('page-profile');
  });
</script>
  <% content_for :page_header do %>
   <%= @contact.full_name %>
  <% end %>
  <% content_for :page_actions do %>
    <% if params[:client_id] %>
      <%= link_to admin_client_contacts_path(params[:client_id]), :class => 'btn btn-primary btn-labeled', :style=>"width: 100%;" do %>
                  <span class="btn-label icon fa fa-plus"></span>Back
      <% end %>
    <% else %>
       <%= link_to admin_contacts_path, :class => 'btn btn-primary btn-labeled', :style=>"width: 100%;" do %>
                  <span class="btn-label icon fa fa-plus"></span>Back
      <% end %>
  <% end %>
  <% end %>

  <%= render "admin/header" %>

<div class= "row">
  <div class="left-col">

    <div class="panel profile-photo">
            <%= image_tag @contact.avatar.url(:medium) %>
   
    </div>
    <div class="panel panel-transparent">
          <div class="panel-heading">
            <span class="panel-title">Contact Information</span>
          </div>
          <div class="list-group">
            <a href="#" class="list-group-item"><i class="profile-list-icon fa fa-building-o" style="color: #888"></i> <%= @contact.client.try(:name) %></a>
            <a href="#" class="list-group-item"><i class="profile-list-icon fa fa-phone" style="color: #4ab6d5"></i> <%= @contact.phone %></a>
            <a href="#" class="list-group-item"><i class="profile-list-icon fa fa-envelope" style="color: #888"></i> <%= @contact.email %></a>
          </div>
    </div>
    <div class="panel panel-transparent">
          <div class="panel-heading">
            <span class="panel-title">Stats</span>
          </div>
          <div class="list-group">
                    <li class="list-group-item">
                      <span class="pull-right"><%= Time.at(@contact.total_time).utc.strftime("%H:%M:%S") %></span>
                      Total Time
                
          </div>
    </div>
  </div>
  <div class="right-col">
  <div class="panel colourable">
            <div class="panel-heading">
              <span class="panel-title">Contact Notes</span>
              <div class="panel-heading-controls">
                <% if params[:client_id] %>
                  <span class="panel-heading-text"><em> <%= link_to new_admin_interaction_path, :remote => true do %>New Interaction<% end %></em>&nbsp;&nbsp;<span style="color: #ccc">|</span>&nbsp;&nbsp;</span>
                   <%= link_to edit_admin_client_contact_path(params[:client_id],@contact), :class => 'btn btn-xs' do %>
                    <span class="btn-label icon fa fa-plus"></span>Edit
                   <% end %>
                <% else %>
                  <span class="panel-heading-text"><em> <%= link_to new_admin_interaction_path, :remote => true do %>New Interaction<% end %></em>&nbsp;&nbsp;<span style="color: #ccc">|</span>&nbsp;&nbsp;</span>
                   <%= link_to edit_admin_contact_path(@contact), :class => 'btn btn-xs' do %>
                    <span class="btn-label icon fa fa-plus"></span>Edit
                   <% end %>
                <% end %>
              </div>
            </div> <!-- / .panel-heading -->
            <div class="panel-body">
              <div class="row">
                <div class="col-md-8">
                  <div class="contact-details">
                   
                    
                      <p>
                        <%= @contact.notes %>
                      </p>
                    
                  </div>
                </div>
                <div class="col-md-4">
                  <div>
                   
                  </div>
                </div>
              </div>
            </div>
  </div>
  <div id="interaction_form">
   
       <%= form_for ([:admin, @contact, @new_interaction]), :class=>"form-horizontal", :remote => true  do |f|  %>
        <div class="form-group">
          <%= f.label :event, :class => "col-sm-1 control-label" %>
           <div class="col-sm-3">

           <%= f.text_field :interaction_event_name, data: {autocomplete_source: admin_interaction_events_path},
            :class=> "form-control", :required => true %>
          </div>
          <%= f.label :time, :class => "col-sm-1 control-label" %>
           <button type="button"  onclick='Example1.Timer.toggle();' class="btn btn-default"/>
            <span class="fa fa-play"></span>/<span class="fa fa-pause"></span>
            </button>
          <button type='button'  onclick='Example1.resetStopwatch();' class="btn btn-default" />
            <span class="fa fa-stop"></span>
          </button>
          <div class="col-sm-1">
          <%= f.number_field :time, :class=> "form-control " %>
          </div>
        </div>
        <div class="form-group">
          <%= f.label :content, :class => "col-sm-1 control-label" %>
          <div class="col-sm-11">
          <%= f.text_area  :content, :class=>"form-control" %>
          </div>
        </div>
        <div class="form-group">
        <%= f.submit "Create Interaction", class: "btn btn-primary pull-right" %>
        </div>
       <%end%>
       </div>
  <div class="col-md-offset-1 timeline" id="timeline" >
      <!-- Timeline header -->
     
       <%= render '/admin/interactions/event' %>
      
    </div> <!-- / .timeline -->


  </div>
</div>


<script>
  $("#interaction_form").toggle(300);
  $(function() {
        $( "#interaction_interaction_event_name" ).autocomplete({
          source: $('#interaction_interaction_event_name').data('autocomplete-source')
    });
  });
</script>

<script>
 var Example1 = new (function() {
    var $interaction_time, // Stopwatch element on the page
        incrementTime = 1000, // Timer speed in milliseconds
        currentTime = 0, // Current time in hundredths of a second
        updateTimer = function() {
            $interaction_time.val(currentTime);
            currentTime += incrementTime / 1000;
        },
        init = function() {
            $interaction_time = $('#interaction_time');
            Example1.Timer = $.timer(updateTimer, incrementTime, true);
        };
    this.resetStopwatch = function() {
        currentTime = 0;
        this.Timer.stop().once();
    };
    $(init);
});

// Common functions
function pad(number, length) {
    var str = '' + number;
    while (str.length < length) {str = '0' + str;}
    return str;
}
function formatTime(time) {
    var hour = parseInt(time / 3600),
        sec = parseInt(time / 100) - (hour * 60),
        sec = parseInt(time / 100) - (min * 60),
        hundredths = pad(time - (sec * 100) - (min * 6000), 2);
    return (min > 0 ? pad(min, 2) : "00") + ":" + pad(sec, 2) + ":" + hundredths;
}
</script>